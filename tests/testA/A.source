'use strict';

/**
 * @license
 * Copyright 2015 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

goog.provide('tachyfont');
goog.provide('tachyfont.Error');
goog.provide('tachyfont.TachyFont');

goog.require('goog.Promise');
goog.require('goog.Uri');
goog.require('goog.asserts');
goog.require('goog.debug.Logger');
goog.require('tachyfont.Define');
/** @suppress {extraRequire} */
goog.require('tachyfont.FontsInfo');
goog.require('tachyfont.IncrementalFont');
goog.require('tachyfont.Persist');
goog.require('tachyfont.Reporter');
goog.require('tachyfont.TachyFontSet');
goog.require('tachyfont.log');
goog.require('tachyfont.utils');



/**
 * TachyFont - A namespace.
 * @param {!tachyfont.FontInfo} fontInfo The font info.
 * @param {boolean} dropData If true then drop the persistent store data.
 * @param {!Object=} opt_params Optional parameters.
 * @constructor
 */
tachyfont.TachyFont = function(fontInfo, dropData, opt_params) {
  var params = opt_params || {};

  /**
   * The object that handles the binary manipulation of the font data.
   * @private {!tachyfont.IncrementalFont.obj}
   * TODO(bstell): integrate the manager into this object.
   */
  this.incrfont_ = tachyfont.IncrementalFont.createManager(fontInfo, dropData,
      params);
};


/**
 * Lazily load the data for these chars.
 */
tachyfont.TachyFont.prototype.getIncrfont = function() {
  return this.incrfont_;
};


/**
 * Lazily load the data for these chars.
 */
tachyfont.TachyFont.prototype.loadNeededChars = function() {
  this.incrfont_.loadChars();
};


/**
 * The persistence 'stable' time.
 * If the data has been in persistent store longer than this then the data is
 * considered to be stable; ie: not being automatically cleared. The time is in
 * milliseconds.
 * @type {number}
 */
tachyfont.TachyFont.GLOBAL_STABLE_DATA_TIME = 24 * 60 * 60 * 1000;


/**
 * Enum for error values.
 * @enum {string}
 */
tachyfont.Error = {
  FILE_ID: 'ETF',
  // 02-03 no longer used.
  KNOWN_WINDOW_ON_ERROR: '05',
  UNKNOWN_WINDOW_ON_ERROR: '06',
  NOT_ENOUGH_STORAGE: '07',
  STORAGE_INFORMATION_FUNCTION: '08',
  GET_STORAGE_INFORMATION: '09',
  NO_PRELUDE_REPORTS: '10',
  PRELUDE_REPORT_TYPE: '11',
  BELOW_GLOBAL_STABLE_TIME: '12',
  OPEN_GLOBAL_DATABASE: '13',
  NO_INDEXED_DB: '14',
  NO_MUTATION_OBSERVER: '15',
  NO_FONT_LOADER: '16',
  PAGE_LOADED: '17',
  GET_COMPACT_FONT: '18',
  // 19 no longer used.
  DISPLAY_COMPACT_FONT: '20',
  NO_UINT8ARRAY_FROM: '21',
  END: '00'
};
